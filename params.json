{"name":"iXAML","tagline":"when UIAppearance is not enough","body":"# iXAML\r\n\r\n[UIAppearance](http://nshipster.com/uiappearance/) allows the appearance of views and controls to be consistently defined across the entire application.\r\n\r\n**If UIAppearance is so great, why do we need iXAML?**\r\n\r\nA major shortcoming of UIAppearance is that styles are imperative (applied it runtime in code), not declarative.\r\n\r\niXAML adds support for declarative stylesheets\r\n\r\n## Design goals of iXAML\r\n\r\n* Interface Builder support\r\n* Switching themes at runtime\r\n* Support multiple stylesheet formats (plist, xaml, css, less, etc.)\r\n* Be light-weight and non-intrusive\r\n* No overriding of framework methods\r\n* No swizzling\r\n* No custom base UIView or UIViewController\r\n\r\n## Styling\r\n\r\n[Getting Started](https://github.com/rudigrobler/iXAML/wiki/Getting-Started)\r\n\r\n## Similar Projects\r\n\r\n[Here](https://github.com/rudigrobler/iXAML/wiki/Similar-Projects) is a list of similar and/or related projects\r\n\r\n* * *\r\nby [@rudigrobler](http://twitter.com/rudigrobler/)","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}